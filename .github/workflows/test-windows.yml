name: CI workflow # core and GUI

permissions:
  contents: read

on:
  push:
    branches: [main, main-dev]
    paths:
      - 'app/**'
      - 'tests/**'
      - 'setup.py'
      - 'pyproject.toml'
      - '.github/workflows/**'

  pull_request:
    branches: [main, main-dev]
    paths:
      - 'app/**'
      - 'tests/**'

  workflow_dispatch:

jobs:
  core-tests:
    name: Core Tests
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'run CI')
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install bellatrex and dev dependencies (no GUI)
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run only core tests, with coverage
        run: pytest -m "not gui" --cov=app.bellatrex --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Optional if public repo
          files: ./coverage.xml

  gui-tests:
    name: GUI Tests
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'run CI')
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install bellatrex with dev+gui extras
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev,gui]"

      - name: Run all tests including GUI
        run: pytest
